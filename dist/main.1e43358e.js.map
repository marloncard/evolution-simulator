{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/MenuScene.js","src/Sprite.js","src/scenes/PlayScene.js","src/main.js","../../.npm-packages/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["CST","SCENES","LOAD","MENU","PLAY","IMAGE","START","TITLE","AUDIO","SPRITE","SLIME","TEXT","INPUT","LoadScene","key","window","chart","options","dataPacket","creatures","avgVision","avgSpeed","time","load","setPath","prop","image","audio","frameConfig","spritesheet","html","atlas","loadSprites","frameHeight","frameWidth","loadImages","loadHTML","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","console","log","file","src","scene","start","Phaser","Scene","MenuScene","setOrigin","setDepth","text","fontFamily","fontSize","element","dom","createFromCache","addListener","slimeCount","mutationRate","treeCount","event","target","name","getChildByName","value","removeListener","Sprite","x","y","texture","frame","sys","updateList","displayList","setScale","physics","world","enableBody","timeArray","timedAgeArray","generation","vision","maxHP","hp","speed","age","includes","push","nameCounter","offspring","organisms","create","food","rate","Physics","Arcade","PlayScene","data","anims","frames","generateFrameNames","prefix","end","suffix","frameRate","repeat","tilemapTiledJSON","map","tilemap","tileset","addTilesetImage","baseLayer","createStaticLayer","trees","group","i","Math","RND","between","getChildren","tree","setSize","gameTime","classType","Between","Actions","Call","organism","setInteractive","setBounce","setCollideWorldBounds","timerText","fill","timer","addEvent","delay","callback","setText","callbackScope","playButton","alpha","clearAlpha","orgText","visible","orgLabel","setVisible","updateLabel","updateText","setAlpha","treeTimer","regrowTrees","overlap","collectTree","collider","org","randomMovement","updateOutput","timedUpdate","shift","loop","graphUpdate","pushGraph","delta","seconds","Date","getUTCSeconds","slimeOutput","numOrganisms","length","movementAnim","metabolise","senescense","cloneSprite","body","velocity","distanceToObject","accelerateToObject","destroy","round","colorSlimes","pointer","gameObject","obj","active","play","flipX","d","setVelocityY","setVelocityX","setVelocity","sprite","disableBody","numtrees","ceil","obj1","obj2","distanceX","abs","distanceY","setTint","mutate","random","orgArray","visionArray","speedArray","reduce","a","b","Game","parent","createContainer","default","arcade","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        PLAY: \"PLAY\"\r\n    },\r\n    IMAGE: {\r\n        START: \"eye.png\",\r\n        TITLE: \"title_bg800.jpg\"\r\n    },\r\n    AUDIO: {\r\n        TITLE: \"tbd.mp3\"\r\n    },\r\n    SPRITE: {\r\n        SLIME: \"slime.png\"\r\n\r\n    },\r\n    TEXT: {\r\n        INPUT: \"inputs.html\"\r\n    }\r\n}\r\n","import { CST } from \"../CST\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n    init() {\r\n        window.chart = null;\r\n        window.options = null;\r\n        window.dataPacket = {\r\n            creatures : [],\r\n            avgVision : [],\r\n            avgSpeed : [],\r\n            time: []\r\n        }\r\n    }\r\n    loadImages() {\r\n        this.load.setPath(\"./assets/image\");\r\n\r\n        for (let prop in CST.IMAGE) {\r\n            this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\r\n        }\r\n    }\r\n    loadAudio() {\r\n        this.load.setPath(\"./assets/audio\");\r\n\r\n        for (let prop in CST.AUDIO) {\r\n            this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\r\n        }\r\n    }\r\n    loadSprites(frameConfig) {\r\n        this.load.setPath(\"./assets/sprite\");\r\n\r\n        for (let prop in CST.SPRITE) {\r\n            this.load.spritesheet(CST.SPRITE[prop], CST.SPRITE[prop], frameConfig);\r\n        }\r\n    }\r\n    loadHTML() {\r\n        this.load.setPath(\"./assets/text\");\r\n\r\n        for (let prop in CST.TEXT) {\r\n            this.load.html(CST.TEXT[prop], CST.TEXT[prop]);\r\n        }\r\n    }\r\n    preload() {\r\n        // load image, spritesheet, sound\r\n        // this.loadAudio();\r\n        //this.load.spritesheet(\"slime\", \"./assets/sprite/slime.png\", {frameHeight: 16, frameWidth: 16});\r\n        //load atlases\r\n        this.load.atlas(\"slime\", \"./assets/sprite/slime.png\", \"./assets/sprite/slime.json\")\r\n\r\n        this.loadSprites({\r\n            frameHeight: 16,\r\n            frameWidth: 16\r\n        });\r\n        this.loadImages();\r\n        this.loadHTML();\r\n\r\n        // this.load.image(\"title_bg\", \"./assets/title_bg800.jpg\");\r\n\r\n        //this.load.audio(\"title_music\", \"./assets/some-song.mp3\")\r\n\r\n        // create loading bar\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff //white\r\n            }\r\n        })\r\n\r\n        /* \r\n        Loader Events:\r\n            complete - when done loading everything\r\n            progress - loader number progress in decimal\r\n        */\r\n\r\n        //simulate large load\r\n        /*\r\n        for (let i = 0; i < 100; i++) {\r\n            this.load.spritesheet(\"grass_tile\" + i, \"./assets/grass_tile.png\", {\r\n                frameHeight: 32,\r\n                frameWidth: 32\r\n            });\r\n        }\r\n        */\r\n        \r\n        this.load.on(\"progress\", (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n            console.log(percent);\r\n        })\r\n\r\n        this.load.on(\"complete\", () => {\r\n            //this.scene.start(CST.SCENES.MENU, \"Hello from Load Scene\")\r\n        });\r\n\r\n        this.load.on(\"load\", (file) => {\r\n            console.log(file.src)\r\n        })\r\n\r\n    }\r\n    create() {\r\n\r\n            this.scene.start(CST.SCENES.MENU)\r\n            \r\n    }\r\n\r\n}","import { CST } from \"../CST\";\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init() {\r\n\r\n    }\r\n    preload() {\r\n        //this.load.html('infoform', './assets/text/inputs.html');\r\n    }\r\n    create() {\r\n        // Add title image\r\n        this.add.image(0,0, CST.IMAGE.TITLE).setOrigin(0).setDepth;\r\n        \r\n        let text = this.add.text(10, 10, '', { color: 'black', fontFamily: 'Arial', fontSize: '32px '});\r\n        \r\n        // Render input elements\r\n        let element = this.add.dom(this.game.renderer.width / 2, this.game.renderer.height / 2 + 150).createFromCache(CST.TEXT.INPUT).setDepth(2)\r\n        element.addListener('click');\r\n        this.slimeCount = \"\";\r\n        this.mutationRate = \"\";\r\n        this.treeCount = \"\";\r\n\r\n        // Create \"on click\" event to pass form settings to variables\r\n        element.on('click', function (event) {\r\n            if (event.target.name === 'submitButton') {\r\n\r\n                this.slimeCount = element.getChildByName('slimeCount').value;\r\n                this.mutationRate = element.getChildByName('mutationRate').value;\r\n                this.treeCount = element.getChildByName('treeCount').value;\r\n                \r\n                if (this.slimeCount.value !== '' && this.mutationRate.value !== '' && this.treeCount.value !== '') {\r\n                    element.removeListener('click');\r\n                    // Start \"PLAY\" scene and pass it form variables\r\n                    this.scene.start(CST.SCENES.PLAY, \r\n                        {\r\n                            slimeCount: this.slimeCount, \r\n                            mutationRate: this.mutationRate,\r\n                            treeCount: this.treeCount\r\n                        })\r\n                }\r\n            }  \r\n        }, this);\r\n\r\n        // // create audio\r\n        // this.sound.pauseOnBlur = false;\r\n        // this.sound.play(\"title_music\", {\r\n        //     loop: true\r\n        // })\r\n\r\n        /*\r\n            PointerEvents:\r\n                pointerover - hovering\r\n                pointerout - not hovering\r\n                pointerup - click and release\r\n                pointerdown - just  click\r\n\r\n        */\r\n\r\n    }\r\n\r\n}\r\n","export class Sprite extends Phaser.Physics.Arcade.Sprite {\r\n    /**\r\n     * \r\n     */\r\n    constructor(scene, x, y, texture, frame) {\r\n        super(scene, x, y, texture, frame);\r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n        this.setScale(1);\r\n        this.setOrigin(0, 0);\r\n        scene.physics.world.enableBody(this);\r\n\r\n        this.timeArray = [];\r\n        this.timedAgeArray = [];\r\n        this.generation = 1;\r\n        \r\n        this.vision = 0\r\n        this.maxHP = 150;\r\n        this.hp = 100;\r\n        this.speed = 0;\r\n        this.age = 0;\r\n        this.name = \"\"\r\n\r\n    }\r\n\r\nsenescense(time) {\r\n    // Organism aging; modifies life\r\n    if (time % 30 === 0 && this.timedAgeArray.includes(time) === false) {\r\n        this.timedAgeArray.push(time)\r\n        this.age += 1\r\n        //console.log(this.name + \" is now age: \" + this.age)\r\n        this.hp -= this.age\r\n        //this.maxHP -=5\r\n\r\n        // Lose 5 max health per \"year\" after age 5\r\n        if (this.age > 5) {\r\n            this.maxHP -= 10\r\n        }\r\n    }\r\n}\r\n\r\nreproduce(nameCounter, key ) {\r\n    // Modifies life; creates new instance of organism\r\n    if (this.age >= 2 && this.hp > 100) {\r\n        //let offspring = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\r\n        let offspring = organisms.create(this.x, this.y, key)\r\n        this.hp = this.hp / 2;\r\n        offspring.hp = this.hp / 2;\r\n        offspring.name = \"Org\" + nameCounter;\r\n        \r\n        return offspring;\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n    \r\n}\r\n\r\nconsume(food) {\r\n    // Restores health; chance increased by speed\r\n    // 80% base chance, each point of speed + 2%; 20% max\r\n}\r\n\r\nmetabolise(rate, time) {\r\n    // Daily process which lowers health\r\n    // Increased by speed\r\n\r\n    if (time % 2 === 0 && this.timeArray.includes(time) === false) {\r\n        this.timeArray.push(time);\r\n        this.hp = this.hp - rate\r\n        //console.log(this.hp + \" HP Remaining for: \" + this.name)\r\n    }\r\n    \r\n}\r\n\r\n}","import { CST } from \"../CST\";\r\nimport { Sprite } from \"../Sprite\";\r\n\r\nexport class PlayScene extends Phaser.Scene {\r\n \r\n    constructor() {\r\n        super({ \r\n            key: CST.SCENES.PLAY,\r\n         });\r\n    }\r\n\r\n    init(data) {\r\n        console.log('init', data);\r\n        this.slimeCount = data.slimeCount;\r\n        this.mutationRate = data.mutationRate\r\n        this.treeCount = data.treeCount\r\n        \r\n    }\r\n    preload() {\r\n\r\n    // Create animations\r\n    // -- Idle Animation\r\n    this.anims.create({\r\n        key: 'idle',\r\n        frames: this.anims.generateFrameNames('slime', {prefix: 'slime-0', start: 5, end: 8, suffix: '.png'}),\r\n        frameRate:5,\r\n        repeat: -1\r\n    })\r\n    // -- North Animation\r\n    this.anims.create({\r\n        key: 'north',\r\n        frames: this.anims.generateFrameNames('slime', {prefix:'slime-0', start: 1, end: 4, suffix: '.png'}),\r\n        frameRate:15,\r\n        repeat: -1\r\n    })\r\n    // -- South Animation\r\n    this.anims.create({\r\n        key: 'south',\r\n        frames: this.anims.generateFrameNames('slime', {prefix:'slime-0', start: 5, end: 8, suffix: '.png'}),\r\n        frameRate:15,\r\n        repeat: -1\r\n    })\r\n    // -- West Animation\r\n    this.anims.create({\r\n        key: 'west',\r\n        frames: this.anims.generateFrameNames('slime', {prefix:'slime-', start: 9, end: 12, suffix: '.png'}),\r\n        frameRate:15,\r\n        repeat: -1\r\n    })\r\n    // Load map tiles\r\n    this.load.image('tileset', './assets/maps/overworld_tileset_grass.png');\r\n    this.load.tilemapTiledJSON('map', './assets/maps/evo-tileset.json');\r\n    this.load.image('tree', './assets/image/overworld-92.png');\r\n\r\n    // Ouput files loaded to console\r\n    // this.load.on(\"load\", (file) => {\r\n    //     console.log(file.src)\r\n    // })\r\n    \r\n    }\r\n    create() {\r\n        // Initialize map\r\n        let map = this.add.tilemap('map');\r\n        // Initialize tileset\r\n        let tileset = map.addTilesetImage('evo-default', 'tileset')\r\n\r\n        // Layers\r\n        let baseLayer = map.createStaticLayer(\"Base\", tileset, 0, 0).setDepth(-1);\r\n        //this.treeLayer = map.createStaticLayer(\"Trees\", tileset, 0, 0);\r\n        //let waterLayer = map.createStaticLayer(\"Water\", tileset, 0, 0);\r\n        //const structureLayer = map.createStaticLayer(\"Structures\", tileset, 0, 0).setDepth(0);\r\n\r\n        // Create empty physics group for trees\r\n        this.trees = this.physics.add.group()\r\n\r\n        // Add trees group to the window object to make accessible globally\r\n        window.trees = this.trees;\r\n\r\n        // Create n number of trees at random locations troughout the grid;\r\n        for (let i = 0; i < this.treeCount; i++) { // Default 120\r\n\r\n            let x = Phaser.Math.RND.between(0, 800);\r\n            let y = Phaser.Math.RND.between(0, 600);\r\n\r\n            this.trees.create(x, y, 'tree')\r\n        };\r\n\r\n        // Set tree hitbox size\r\n        for (let tree of this.trees.getChildren()) {\r\n            tree.setSize(10, 10)\r\n        };\r\n\r\n        this.gameTime = 0;\r\n        this.nameCounter = 0;\r\n        // Create organisms physics group and populate using this.slimeCount\r\n        this.organisms = this.physics.add.group({classType: Sprite})\r\n        for (let i = 0; i < this.slimeCount; i++) {\r\n            let x = Phaser.Math.RND.between(100, 500);\r\n            let y = Phaser.Math.RND.between(100, 300);\r\n\r\n            this.organisms.create(x, y, 'slime')\r\n            this.organisms.getChildren()[i].name = \"Org\" + this.nameCounter\r\n            this.organisms.getChildren()[i].speed = Phaser.Math.Between(0, 20)\r\n            this.organisms.getChildren()[i].vision = Phaser.Math.Between(0, 50)\r\n            this.nameCounter++ \r\n        };\r\n        // Add organisms group to the window object to make accessible globally\r\n        window.organisms = this.organisms\r\n\r\n        // Takes an array of objects and passes each of them to the given callback.\r\n        Phaser.Actions.Call(this.organisms.getChildren(), function(organism) {\r\n        // Make organisms interactive\r\n        organism.setInteractive();\r\n        // Set organism bounce\r\n        organism.setBounce(0.5,0.5)\r\n        // Set organism collision with world bounds\r\n        organism.setCollideWorldBounds(true);\r\n        }, this);\r\n\r\n        // Create world timer text object\r\n        let timerText = this.add.text(16, 16, 'Timer: ' + 0, { fontSize: '12px', fill: '#fff' })\r\n        let timer = this.time.addEvent({\r\n            delay:1000,\r\n            callback: () => {this.gameTime++; timerText.setText('Timer: ' + this.gameTime);},\r\n            callbackScope: this,\r\n            repeat: -1\r\n        });\r\n        \r\n        // Create button to show or hide organism text **FIX**\r\n        let playButton = this.add.image(30, 7, CST.IMAGE.START).setDepth(1).setScale(0.05);\r\n        playButton.alpha = 0.9;\r\n\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerover\", () => {\r\n            playButton.setScale(0.06)\r\n            playButton.clearAlpha();\r\n        })\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            playButton.setScale(0.05)\r\n            playButton.alpha = 0.9;\r\n            //this.scene.start();\r\n        })\r\n\r\n        playButton.on(\"pointerup\", (event) => {\r\n\r\n            if (this.orgText.visible) {\r\n                this.orgLabel.setVisible(false);\r\n                this.orgText.setVisible(false);\r\n                this.updateLabel.setVisible(false);\r\n                this.updateText.setVisible(false);\r\n            } else {\r\n                this.orgLabel.setVisible(true);\r\n                this.orgText.setVisible(true);\r\n                this.updateLabel.setVisible(true);\r\n                this.updateText.setVisible(true);  \r\n            }\r\n\r\n            playButton.setScale(0.05);\r\n            playButton.clearAlpha();\r\n        })\r\n\r\n        // Create current organisms text object\r\n        this.orgLabel = this.add.text(16, 42, 'THE LIVING', {fontSize: '13px', fill: '#000'}).setDepth(10).setVisible(false);\r\n        this.orgLabel.setAlpha(0.75);\r\n        this.orgText = this.add.text(16, 55, '', {fontSize: '12px', fill: '#fff'}).setDepth(10).setVisible(false);\r\n        this.orgText.setAlpha(0.75);\r\n        // Create organisms update text object\r\n        this.updateLabel = this.add.text(400, 42, 'UPDATES', {fontSize: '13px', fill: '#000'}).setDepth(10).setVisible(false);\r\n        this.updateLabel.setAlpha(0.75);\r\n        this.updateText = this.add.text(400, 55, '', { fontSize: '12px', fill: '#fff' }).setDepth(10).setVisible(false);\r\n        this.updateText.setAlpha(0.75);\r\n\r\n        // Respawn trees\r\n        let treeTimer = this.time.addEvent({\r\n            delay: 20000,\r\n            callback: this.regrowTrees,\r\n            callbackScope: this,\r\n            repeat: -1\r\n        });\r\n\r\n        // Map Collisions\r\n        //this.physics.add.collider(slime, this.treeLayer);\r\n        //this.physics.add.collider(slime, waterLayer);\r\n        //this.physics.add.collider(this.organisms, this.treeLayer);\r\n        this.physics.add.overlap(this.organisms, this.trees, this.collectTree, null, this);\r\n        //this.physics.add.collider(this.organisms, waterLayer);\r\n        this.physics.add.collider(this.organisms, this.organisms, ()=> {\r\n            for (let org of this.organisms.getChildren()) {\r\n                this.randomMovement(org);\r\n            }\r\n        });\r\n\r\n        // this.physics.add.collider(this.organisms, this.organisms, ()=> {\r\n        //     for (let org of this.organisms.getChildren()) {\r\n        //         this.randomMovement(org);\r\n        //     }\r\n        // });\r\n\r\n        // Create array to hold organism update data\r\n        this.updateOutput = [];\r\n        // Create timer that removes first item from array every 3 seconds \r\n        this.timedUpdate = this.time.addEvent({\r\n            delay: 3000,\r\n            callback: () => {this.updateOutput.shift()},\r\n            callbackScope: this,\r\n            loop: true\r\n        });\r\n        // Create timer that pushes graph data every 30 seconds\r\n        this.graphUpdate = this.time.addEvent({\r\n            delay: 30000,\r\n            callback: this.pushGraph,\r\n            callbackScope: this,\r\n            loop: true\r\n        })\r\n\r\n        /*\r\n        gameobject events:\r\n            animationstart\r\n            animationrepeat\r\n            animationupdate\r\n            animationcomplete\r\n        */\r\n\r\n    }\r\n    update(time, delta) { //delta 16.666 @ 60fps -- delta is fps in milliseconds\r\n        // this.physics.world.collide(slime, slime, (slime) => {\r\n        //     slime.destroy();\r\n        // })\r\n        this.seconds = new Date().getUTCSeconds();\r\n        this.slimeOutput = [];\r\n\r\n\r\n        this.timerText;\r\n        // this.movementAnim(slime);\r\n        // this.randomMovement(slime);\r\n\r\n        let organisms = this.organisms.getChildren();\r\n        // apply collision to group\r\n        //this.physics.world.collide(organisms)\r\n\r\n        // apply collision to group & slime\r\n        // this.physics.world.collide(organisms, slime, (organisms, slime)=>{\r\n        //     organisms.destroy()\r\n        //     slime.destroy()\r\n        // })\r\n\r\n        //console.log(slime.hp)\r\n        let numOrganisms = organisms.length;\r\n    \r\n        for (let i = 0; i < numOrganisms; i++) {\r\n            \r\n            if (organisms[i].hp <= 50) {\r\n                organisms[i].setScale(0.5);\r\n            } else if (organisms[i].hp > 50 && organisms[i].hp <= 75 ) {\r\n                organisms[i].setScale(0.75);\r\n            } else if (organisms[i].hp > 75 && organisms[i].hp <= 100 ) {\r\n                organisms[i].setScale(1.0);\r\n            } else if (organisms[i].hp > 100 && organisms[i].hp <= 125) {\r\n                organisms[i].setScale(1.25);\r\n            } else if (organisms[i].hp > 125 && organisms[i].hp <= 150) {\r\n                organisms[i].setScale(1.50);\r\n            }\r\n            \r\n            // if (slime.active === true) {\r\n            //     //this.physics.accelerateToObject(organisms[i], slime)\r\n            // }\r\n            //console.log(organisms[i].hp)\r\n\r\n            // movement\r\n            this.movementAnim(organisms[i]);\r\n            organisms[i].metabolise(2, this.gameTime)\r\n            organisms[i].senescense(this.gameTime)\r\n            this.cloneSprite(organisms[i])\r\n\r\n\r\n            if (organisms[i].body.velocity.x === 0 && organisms[i].body.velocity.y === 0 ) {\r\n                this.randomMovement(organisms[i]);\r\n            } else {\r\n                for (let tree of this.trees.getChildren()) {\r\n                    if (this.distanceToObject(organisms[i], tree) <= organisms[i].vision && tree.visible) {\r\n                        //organisms[i].setVelocity(0, 0)\r\n                        //console.log(this.distanceToObject(organisms[i], tree))\r\n                        //console.log(organisms[i].vision)\r\n                        this.physics.accelerateToObject(organisms[i], tree, 60, 25+organisms[i].speed, 25+organisms[i].speed)\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // Death loop\r\n        for (let org of this.organisms.getChildren()) {\r\n            if (org.hp <= 0) {\r\n                //console.log(org.name + \" is dead :( at age \" + org.age + \"| Vision: \" + org.vision + \"| Speed: \" + org.speed)\r\n                this.updateOutput.push(org.name + \" died at age \" + org.age)\r\n                org.destroy()\r\n                numOrganisms = organisms.length\r\n            }\r\n        };\r\n\r\n        // Update Organism list\r\n        for (let org of this.organisms.getChildren()) {\r\n            this.slimeOutput.push(org.name + ' Age: ' + org.age  + ' Gen: ' + org.generation + ' HP: ' + Math.round(org.hp) + ' Vision: ' + org.vision + ' Speed: ' + org.speed)\r\n        }\r\n        this.orgText.setText(this.slimeOutput);\r\n        this.updateText.setText(this.updateOutput);\r\n        if(this.updateOutput.length > 8) {\r\n            this.updateOutput.shift()\r\n        }\r\n        this.colorSlimes()\r\n\r\n    }\r\n\r\n    onObjectClicked(pointer, gameObject) {\r\n        gameObject.setScale(1.5);\r\n    }\r\n\r\n    movementAnim(obj) {\r\n        if (obj.active === true) {\r\n            if(obj.body.velocity.y > 0) {\r\n                obj.anims.play('south', true);\r\n            } else if (obj.body.velocity.y < 0) {\r\n                obj.anims.play('north', true);\r\n            } else if (obj.body.velocity.x < 0) {\r\n                obj.anims.play('west', true);\r\n                obj.flipX = false;\r\n            } else if (obj.body.velocity.x > 0) {\r\n                obj.anims.play('west', true);\r\n                obj.flipX = true;\r\n            } else {\r\n                obj.anims.play('idle', true);\r\n            }\r\n        }\r\n    }\r\n\r\n    randomMovement(obj) {\r\n            if (obj.active === true) {\r\n                const d = Phaser.Math.Between(0, 500)\r\n                if (d < 100 && d > 95) {\r\n                    obj.setVelocityY(35+obj.speed);\r\n                } else if (d < 95 && d > 90) {\r\n                    obj.setVelocityY(-35)-obj.speed;\r\n                } else if (d < 90 && d > 85) {\r\n                    obj.setVelocityX(35+obj.speed);\r\n                } else if (d < 85 && d > 80) {\r\n                    obj.setVelocityX(-35-obj.speed);\r\n                } else if (d < 80 && d > 75) {\r\n                    obj.setVelocity(0,0);\r\n                }\r\n            }\r\n    }\r\n\r\n    collectTree(sprite, tree) {\r\n        tree.disableBody(true, true);\r\n        sprite.hp += 10;\r\n        if (sprite.hp > 150) {\r\n            sprite.hp = 150;\r\n        }\r\n    };\r\n\r\n    regrowTrees() {\r\n        let trees = this.trees.getChildren()\r\n        let numtrees = trees.length\r\n\r\n        for (let i = 0; i < numtrees; i++) {\r\n            if (this.seconds < 20 && i <= Math.ceil(this.treeCount / 3)) {\r\n                trees[i].enableBody(false, trees[i].x, trees[i].y, true, true);\r\n            } else if (this.seconds > 20 && this.seconds < 40 && i > Math.ceil(this.treeCount/3) && i < Math.ceil(this.treeCount/1.5)) {\r\n                trees[i].enableBody(false, trees[i].x, trees[i].y, true, true);\r\n            } else if (this.seconds > 40 && i > Math.ceil(this.treeCount/1.5)) {\r\n                trees[i].enableBody(false, trees[i].x, trees[i].y, true, true);\r\n            }\r\n\r\n            //console.log(\"**Spring has sprung**\")\r\n        }\r\n    };\r\n\r\n    distanceToObject(obj1, obj2) {\r\n        let distanceX = Math.abs(obj1.x - obj2.x)\r\n        let distanceY = Math.abs(obj1.y - obj2.y)\r\n\r\n        return distanceX + distanceY\r\n    };\r\n\r\n    colorSlimes() {\r\n        for (let org of this.organisms.getChildren()) {\r\n            if (org.speed > 9 && org.speed < 20) {\r\n                org.setTint(0xff0000,0xffe600,0xffe600,0xffe600);\r\n            } else if (org.speed > 19) {\r\n                org.setTint(0xf75482)\r\n            }\r\n        }\r\n    }\r\n\r\n    cloneSprite(org) {\r\n        if (org.age >= 2 && org.hp > 100) {\r\n            let offspring = this.organisms.create(org.x, org.y, 'slime')\r\n            org.hp = org.hp / 2;\r\n            offspring.hp = org.hp / 2;\r\n            offspring.name = \"Org\" + this.nameCounter;\r\n            offspring.age = 0;\r\n            offspring.vision = org.vision\r\n            offspring.generation = org.generation + 1;\r\n            this.updateOutput.push(offspring.name + \" was born\")\r\n            let mutate = Math.random()\r\n            if ( mutate < (this.mutationRate*0.01)) { // 20% chance of mutation\r\n                if (mutate < 0.10) {\r\n                    offspring.vision -= 3;\r\n                    //console.log(\"**Vision Mutation -3 for \" + offspring.name);\r\n                    this.updateOutput.push(offspring.name + ' vision mutation -3');\r\n                } else if (mutate > 0.10 && mutate < 0.21) {\r\n                    offspring.vision += 3;\r\n                    //console.log(\"**Vision Mutation +3 for \" + offspring.name);\r\n                    this.updateOutput.push(offspring.name + ' vision mutation +3')\r\n                }\r\n            };\r\n            offspring.speed = org.speed\r\n            mutate = Math.random()\r\n            if ( mutate < (this.mutationRate*0.01)) { // Chance of mutation\r\n                if (mutate < 0.10) {\r\n                    offspring.speed -= 3;\r\n                    //console.log(\"**Speed Mutation -3 for \" + offspring.name);\r\n                    this.updateOutput.push(offspring.name + ' speed mutation -3');\r\n                } else if (mutate > 0.10 && mutate < 0.21) {\r\n                    offspring.speed += 3;\r\n                    //console.log(\"**Speed Mutation +3 for \" + offspring.name);\r\n                    this.updateOutput.push(offspring.name + ' speed mutation +3');\r\n                }\r\n            };\r\n            if (offspring.speed < 0) {\r\n                offspring.speed = 0;\r\n            }\r\n            if (offspring.vision < 0) {\r\n                offspring.vision = 0;\r\n            }\r\n            this.nameCounter++;\r\n            offspring.setInteractive()\r\n            offspring.setCollideWorldBounds(true);\r\n        }\r\n    }\r\n\r\n    pushGraph() {\r\n        let orgArray = this.organisms.getChildren()\r\n        let visionArray = [];\r\n        let speedArray = [];\r\n        for (let org of orgArray) {\r\n            visionArray.push(org.vision)\r\n            speedArray.push(org.speed)\r\n        }\r\n        window.dataPacket.avgVision.push(Math.round(visionArray.reduce((a,b)=>{return a+b})/visionArray.length))\r\n        window.dataPacket.avgSpeed.push(Math.round(speedArray.reduce((a,b)=>{return a+b})/speedArray.length))\r\n        window.dataPacket.creatures.push(orgArray.length)\r\n        window.dataPacket.time.push(this.gameTime)\r\n        if (window.dataPacket.time.length > 20) {\r\n            window.dataPacket.avgVision.shift()\r\n            window.dataPacket.avgSpeed.shift()\r\n            window.dataPacket.creatures.shift()\r\n            window.dataPacket.time.shift()\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n","/** @types {import(\"../typings/phaser\")} */\nimport {LoadScene} from \"./scenes/LoadScene\";\nimport {MenuScene} from \"./scenes/MenuScene\";\nimport {PlayScene} from \"./scenes/PlayScene\";\n\nlet game = new Phaser.Game({\n    parent: 'phaser-tag',\n    width: 800,\n    height: 600,\n    dom: {\n        createContainer: true\n    },\n    scene:[\n        LoadScene,\n        MenuScene,\n        PlayScene\n    ],\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            //debug: true\n        }\n    }\n});\n\n\n\n\n/*\n//import Life from './life.js';\nconst gameState = {}\nconst config = {\n    type: Phaser.AUTO,\n    width: 800,\n    height: 600,\n    backgroundColor: '#ababab',\n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: 100,\n            debug: true\n        }\n    },\n\n    scene: {\n        preload,\n        create,\n        update\n    }\n\n\n};\nconst game = new Phaser.Game(config);\n\nlet slime = \"\";\nlet timer = 0;\nconst healthbar = 100;\n\nfunction preload () {\n    // preload images, sounds & other assets\n    //this.load.json('map', 'assets/grass.json')\n    this.load.image('tileset', 'assets/TilesetGrass/overworld_tileset_grass.png');\n    this.load.tilemapTiledJSON('map', 'assets/TilesetGrass/evo-tileset.json');\n    //this.load.spritesheet('tiles', 'assets/grass.png', {frameWidth: 64, frameHeight: 64})\n    this.load.multiatlas('slime', 'assets/slime.json', 'assets')\n    this.load.spritesheet('slime_back', 'assets/slime1_back.png', {frameWidth: 16, frameHeight: 16});\n    this.load.spritesheet('slime_front', 'assets/slime1_front.png', {frameWidth: 16, frameHeight: 16});\n    this.load.spritesheet('slime_side', 'assets/slime1_side.png', {frameWidth: 16, frameHeight: 16})\n    this.load.spritesheet('slime_explode', 'assets/slime_explode.png', {frameWidth: 16, frameHeight: 16})\n};\nfunction create () {\n\n\n    // Layers\n\n\n    // Add organism to scene (full spritesheet) -- .setBounce(10).setFriction(0)\n    this.slime = this.physics.add.sprite(400, 330,'slime', 'slime-05.png');\n    // label(this.slime)\n\n    // Create animations\n    this.anims.create({\n        key: 'idle',\n        frames: this.anims.generateFrameNames('slime', {prefix: 'slime-0', start: 5, end: 8, suffix: '.png'}),\n        frameRate:5,\n        repeat: -1\n    })\n    this.anims.create({\n        key: 'north',\n        frames: this.anims.generateFrameNames('slime', {prefix:'slime-0', start: 1, end: 4, suffix: '.png'}),\n        frameRate:15,\n        repeat: -1\n    })\n    this.anims.create({\n        key: 'south',\n        frames: this.anims.generateFrameNames('slime', {prefix:'slime-0', start: 5, end: 8, suffix: '.png'}),\n        frameRate:15,\n        repeat: -1\n    })\n    this.anims.create({\n        key: 'west',\n        frames: this.anims.generateFrameNames('slime', {prefix:'slime-', start: 9, end: 12, suffix: '.png'}),\n        frameRate:15,\n        repeat: -1\n    })\n\n    //Group of organisms\n    this.organisms = this.physics.add.group({\n        key: 'slime',\n        repeat: 4,\n        setXY: {\n            x: 400,\n            y: 300,\n            stepX: 80,\n            stepY: 20\n        }\n    });\n\n    //scale organism\n    // Phaser.Actions.ScaleXY(this.organisms.getChildren(), -0.10,-0.10);\n\n    // Takes an array of objects and passes each of them to the given callback.\n    Phaser.Actions.Call(this.organisms.getChildren(), function(organism) {\n        organism.speed = Math.random() * 2 + 1;\n        // make item interactive\n        organism.setInteractive();\n\n    }, this);\n\n    let locations = this.add.text(16, 16, 'location: 0, 0', { fontSize: '10px', fill: '#000' })\n    this.orgLocations = this.add.group({\n        //\n    })\n\n    this.slime.speed = 2;\n    this.physics.world.bounds.width = map.widthInPixels-10;\n    this.physics.world.bounds.height = map.heightInPixels-10;\n    this.slime.setCollideWorldBounds(true);\n\n\n    \n\n\n    // Collision debugging (remove in production)\n    // const debugGraphics = this.add.graphics().setAlpha(0.75);\n    // treeLayer.renderDebug(debugGraphics, {\n    //     tileColor: null,\n    //     collidingTileColor: new Phaser.Display.Color(243, 134, 48, 255),\n    //     faceColor: new Phaser.Display.Color(40, 39, 37, 255)\n    // });\n    \n    \n    \n};\nfunction update () {\n\n    // Slime movement\n    this.slime.setVelocityX(-64)\n    movementAnim(this.slime)\n\n        // Organism movement\n        let organisms = this.organisms.getChildren();\n        let numOrganisms = organisms.length;\n    \n        for (let i = 0; i < numOrganisms; i++) {\n\n            // movement\n            movementAnim(organisms[i]);\n  \n            if (timer < 10) {\n                if (i === 0 || i === 1) {\n                    organisms[i].setVelocityY(64);  \n                } else if (i === 2 || i === 3) {\n                    organisms[i].setVelocityX(64)\n                } else if (i === 5) {\n                    organisms[i].setVelocity(0,0)\n                }\n            }\n\n\n                if (organisms[i].y >= 599) {\n                    organisms[i].setVelocityY(-64)\n                    //organisms[i].anims.play('north', true);\n                } else if (organisms[i].y <= 1) {\n                    organisms[i].setVelocityY(64);\n                    //organisms[i].anims.play('south', true);\n                } else if (organisms[i].x >= 799) {\n                    organisms[i].setVelocityX(-64);\n                    //organisms[i].anims.play('west', true)\n                } else if (organisms[i].x <= 1) {\n                    organisms[i].setVelocityX(64);\n                    //organisms[i].anims.play('west', true)\n                    //organisms[i].flipX = true;\n                } else {\n                    randomMovement(organisms[i])\n                }\n                \n    // if (organisms[i].x >= this.organismMaxX && organisms[i].speed > 0) {\n            //     organisms[i].speed *= -0.25;\n            // } else if (organisms[i].x <= this.organismMinX && organisms[i].speed < 0) {\n            //     organisms[i].speed *= -0.25;\n            // }\n            timer++\n        };\n\n    //this.slime.y -= this.slime.speed\n    //this.slime.anims.play('north', true);\n\n}; \n\n\n\n\n\n\n// function label(obj) {\n//     const style = { font: \"10px Arial\", fill: \"#ffffff\"};\n//     obj.label_score = this.add.text(20, 20, \"0\", style);\n//     obj.hello_sprite.addChild(this.label_score)\n// }\n\n//locations = this.add.text(16, 16, 'location: 0, 0', { fontSize: '10px', fill: '#000' })\n\n*/","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}